- name: Patch system by Yum
  hosts: all
  tasks:
    - name: Patch all servers
      yum:
        name: "ker*"
        state: latest
      ignore_errors: true
      register: update_status
    - debug: 
         msg: 
         - "{{ update_status.changes }}"
         - "{{ update_status.results }}"
 Reboot the system     
    - name: reboot the system after update 
      command: shutdown -r +1 # system is going to reboot 
      async: 0
      poll: 0
      ignore_errors: true
 this task is to wait for 3  minutues for system to come up after the reboot
    - name: pause for 180 secs
      pause:
        minutes: 1
 Lets verify wheather services is running or not 
 Let's Verify Cron servic 
    - name: check crond 
      command: systemctl is-active crond
      register: crond_status 
    - name: debug crond service status    
      debug:
          msg:
            -  "{{ crond_status.stdout_lines }}" 
            
    # # Lets verify ssh service
    # - name: check ssh service 
    #   command: systemctl is-active sshd
    #   register: ssh_status 
    # - name: debug SSH service status    
    #   debug:
    #         msg: "{{ ssh_status.stdout_lines }}"
    #           # - "{{ ssh.stdout_lines }}"
    # # - name: Check free space 
    # #   shell: lsblk
    # #   register: data
    # # - debug:
    # #         msg: 
    # #             - "{{ data.stdout_lines}}"
    # # This Play will fins the status of sshd service by service module 

    # - name: check 'sshd' service status by service module 
    #   service: name=sshd state=started enabled=true
    #   register: ser1
    # - name: show the output of ssh by service module   
    #   debug:
    #     msg: "{{ ser1.status.ActiveState }}"





















    # - name: insure ssh service should be running 
    #   service: name=sshd state=started enabled=true
    #   register: status_b
    # - name: ssh service status output 
    #   debug:
    #     msg: "{{ status_b.status.ActiveState }}"
    #   tags: ssh
    # - name: stop service cron on debian, if running
    #   systemd:
    #   name: cron
    #   state: started
    #   register: time
    # - debug:
    #           msg: 
    #           - "{{ time.stdout}}"
    #   tags:
    #           - time        
   



